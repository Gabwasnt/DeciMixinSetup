buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            url = "https://jitpack.io"
        }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
    }
    dependencies {
        classpath ('com.anatawa12.forge:ForgeGradle:1.2-1.0.+') {
            changing = true
        }
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.2'
    }
}

apply plugin: "forge"
apply plugin: 'idea'
apply plugin: "com.github.johnrengelman.shadow"

version = mod_version
group= mod_group
archivesBaseName = mod_id

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
[compileJava, compileTestJava]*.options*.encoding = "UTF-8"

configurations {
    compile.extendsFrom(shadow)
}

dependencies {
    implementation fileTree(dir: "deci", includes: ["*.jar"])
}

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "minecraft-debug"
}

repositories {
    maven {
        url = "https://jitpack.io"
    }
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"
                
        expand "version" : project.version, "mcversion" : project.minecraft.version,
                "authorlist" : project.mod_authors, "modid":project.mod_id,
                "description":project.mod_description,"name":project.mod_name,"credits":project.mod_credits
    }
        
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}

jar {
    enabled = false
    dependsOn shadowJar
}

shadowJar {
    classifier = '' // use the same file name as the jar task
    configurations = [project.configurations.shadow]
    exclude "**/Decimation-deobf.jar"

    manifest {
        attributes(
                'FMLAT': "nowhere.cfg",
        )
    }
}

def yourMixinConfig = 'mixins.community_relaunched.json'
def refMapForYourConfig = 'mixins.community_relaunched.refmap.json'
def relativePathToMixinAP = 'tools/mixin-0.8-SNAPSHOT.jar'

repositories {
    maven {
        name = "sponge"
        url = "https://repo.spongepowered.org/maven/"
    }
}

dependencies {
    shadow('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        // Mixin includes a lot of dependencies that are too up-to-date
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
        exclude module: 'log4j-core'
    }
}

def refMap = "${tasks.compileJava.temporaryDir}" + File.separator + refMapForYourConfig
def mixinSrg = "${tasks.reobf.temporaryDir}" + File.separator + "mixins.srg"

shadowJar {
    from refMap
    manifest {
        attributes.put("MixinConfigs", yourMixinConfig)
        attributes.put("FMLCorePluginContainsFMLMod", true)
        attributes.put("ForceLoadAsMod", true)
        attributes.put("FMLCorePlugin","${mod_group}.mixin.CorePlugin")
        attributes.put("TweakClass", "org.spongepowered.asm.launch.MixinTweaker")
    }
}

reobf {
    addExtraSrgFile mixinSrg
}

afterEvaluate {
    def fixedRelPathToAP = relativePathToMixinAP
    if(fixedRelPathToAP.startsWith('./') || fixedRelPathToAP.startsWith('.\\')){
        fixedRelPathToAP = fixedRelPathToAP.substring(2)
    } else if(fixedRelPathToAP.startsWith('/') || fixedRelPathToAP.startsWith('\\')){
        fixedRelPathToAP = fixedRelPathToAP.substring(1)
    }

    tasks.compileJava {
        println "Path: " + projectDir.absolutePath
        options.compilerArgs += [
                // There's a bug in the AnnotationProcessor for 0.7.11 that will generate the annotations pointing to the parent class instead of subclass
                // resulting in the mixin not being applied.  This is fixed in 0.8, however 0.8 needs guava > 21.0, and minecraft ships with 17.0.
                // So as a hacky workaround... ship with 0.7.11, but use the AP from 0.8 for compiling
                "-processorpath", projectDir.absolutePath + '/' + fixedRelPathToAP,
                "-processor", "org.spongepowered.tools.obfuscation.MixinObfuscationProcessorInjection,org.spongepowered.tools.obfuscation.MixinObfuscationProcessorTargets",
                "-Xlint:-sunapi", "-XDenableSunApiLintControl", "-XDignore.symbol.file",
                "-AreobfSrgFile=${tasks.reobf.srg}", "-AoutSrgFile=${mixinSrg}", "-AoutRefMapFile=${refMap}"
        ]
    }
}

sourceSets {
    main {
        ext.refMap = refMapForYourConfig
    }
}

runClient {
    args("--mods=" + java.nio.file.Paths.get("$projectDir").resolve(minecraft.runDir).normalize().relativize(shadowJar.archivePath.toPath()))
}